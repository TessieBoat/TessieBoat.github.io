<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>C:/Users/34990/Documents/Gridea/output</id>
    <title>TessieBoat</title>
    <updated>2019-10-13T12:12:04.752Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="C:/Users/34990/Documents/Gridea/output"/>
    <link rel="self" href="C:/Users/34990/Documents/Gridea/output/atom.xml"/>
    <subtitle>享受学习的快乐</subtitle>
    <logo>C:/Users/34990/Documents/Gridea/output/images/avatar.png</logo>
    <icon>C:/Users/34990/Documents/Gridea/output/favicon.ico</icon>
    <rights>All rights reserved 2019, TessieBoat</rights>
    <entry>
        <title type="html"><![CDATA[priority_queue 用法]]></title>
        <id>C:/Users/34990/Documents/Gridea/output/post/vector-yong-fa/index.html</id>
        <link href="C:/Users/34990/Documents/Gridea/output/post/vector-yong-fa/index.html">
        </link>
        <updated>2019-10-13T10:54:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="1-头文件">1. 头文件</h3>
<pre><code>#include &lt;queue&gt;
</code></pre>
<h3 id="2-声明">2. 声明</h3>
<pre><code>priority_queue &lt;int&gt; Q;//定义一个从大到小队列叫做 “Q” 
priority_queue&lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt; Q;   //从小到大的队列 
</code></pre>
<h3 id="3-用法">3. 用法</h3>
<pre><code>Q.top()   //输出第一位
Q.pop();  //删除第一位
Q.size()  //输出栈长度   
Q.empty()  //输出是否为空（1或0）
Q.push(x);  //把x输入进队列，并马上排序
</code></pre>
<h3 id="4-其他">4. 其他</h3>
<p>排序的时间复杂度为O(nlogn)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[字符串进阶(string)用法]]></title>
        <id>C:/Users/34990/Documents/Gridea/output/post/zi-fu-chuan-jin-jie-stringyong-fa/index.html</id>
        <link href="C:/Users/34990/Documents/Gridea/output/post/zi-fu-chuan-jin-jie-stringyong-fa/index.html">
        </link>
        <updated>2019-10-12T13:54:38.000Z</updated>
        <content type="html"><![CDATA[<p>这是一个<s>非常脑残的</s>字符串。<br>
对于一个C<s>大爷</s>选手，还是挺不习惯这个的。</p>
<h3 id="1头文件">1.头文件</h3>
<pre><code>#include &lt;cstring&gt;
</code></pre>
<h3 id="2声明">2.声明</h3>
<pre><code>string s;
</code></pre>
<p>相当于一个不定长的char。</p>
<h3 id="3使用">3.使用</h3>
<p>基本<s>操作</s>用法</p>
<pre><code>cin&gt;&gt;s; //输入
cout&lt;&lt;s&lt;&lt;endl; //输出
</code></pre>
<p>进阶用法</p>
<pre><code>getline(cin,s); //输入一整行  但是\n会被记录 
s.length()  一个值，字符串长度
s=s+t; //把t插入在s后面
s.substr(1,3)  一串字符，从s的第1位到第3位
s.find_first_of(&quot;aaa&quot;)  一个值，表示第一个存在aaa的位置
s.find_first_of(&quot;aaa&quot;,10)  一个值，表示10位之后第一个存在aaa的位置
s.find(&quot;aaa&quot;)  一个值，存在aaa的位置
s.erase(5,4); //从第五位开始连续删除4个字符 
s.replace(5,4,&quot;233&quot;); //从第五位吞掉往后的4个字符，加上233
</code></pre>
<h3 id="4其他">4.其他</h3>
<pre><code>strcmp(a,b)  一个值，字典序比较，a大输出正数  一样大输出0  b大输出负数 
strcpy(a,b); //把b字符串覆盖给a 
strlen(a+0); //从a[0]开始查找有多少字符 
memcpy(a,b,sizeof(char)*100); //把整个b的前100位字符传送给a 
</code></pre>
<p>后排提醒</p>
<pre><code>'0'=48
'a'=97
</code></pre>
]]></content>
    </entry>
</feed>